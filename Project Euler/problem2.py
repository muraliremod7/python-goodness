
""" Each new term in the Fibonacci sequence is 
generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence 
whose values do not exceed four million, 
find the sum of the even-valued terms.  """

def fib_even_sum(number):
	if number == 0: return 0
	if number == 1: return 0
	if number == 2: return 2
	if number > 4000000:
		return "Number cannot exceed 4 million"

	#number is greater than 2 (error check done)

	#set sum to 2
	sum = 2

	#sum initial fibonacci values
	fib0 = 0
	fib1 = 1
	fib2 = 2

	#counter to sum only every third entry
	counter = 0;

	while (fib2 <= number):
		if(counter == 3):
			#add even number to sum bucket
			sum = sum + fib2

			#reset counter
			counter = 0

		#Move to the next 3 set of numbers starting from fib2
		fib0 = fib1
		fib1 = fib2
		fib2 = fib0 + fib1
		counter = counter + 1 

	#return total sum
	return sum


	#Test
print(fib_even_sum(4000000))